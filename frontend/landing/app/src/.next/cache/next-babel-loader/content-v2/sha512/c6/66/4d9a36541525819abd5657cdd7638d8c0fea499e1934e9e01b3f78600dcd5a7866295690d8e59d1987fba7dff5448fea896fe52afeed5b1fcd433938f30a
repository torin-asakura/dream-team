{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/darius/workspace/atlantis/dream-team/frontend/landing/index/src/index.component.tsx\";\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { MY_QUERY } from './queries';\n\nconst Index = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(MY_QUERY);\n\n  const Data = ({\n    data\n  }) => Object.keys(data).map(item => /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: data[item]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Data, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\nexport { Index };","map":{"version":3,"sources":["/Users/darius/workspace/atlantis/dream-team/frontend/landing/index/src/index.component.tsx"],"names":["React","useQuery","MY_QUERY","Index","loading","error","data","Data","Object","keys","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,SAASC,QAAT,QAAyB,WAAzB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BL,QAAQ,CAACC,QAAD,CAAzC;;AAEA,QAAMK,IAAI,GAAG,CAAC;AAAED,IAAAA;AAAF,GAAD,KAAcE,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,GAAlB,CAAuBC,IAAD,iBAC/C;AAAA,cAAKL,IAAI,CAACK,IAAD;AAAT;AAAA;AAAA;AAAA;AAAA,UADyB,CAA3B;;AAIA,sBACE;AAAA,eACCP,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADZ,EAECC,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFV,eAGA,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADF;AAOD,CAdD;;AAgBA,SAASH,KAAT","sourcesContent":["import React from 'react'\nimport { useQuery } from '@apollo/client'\n\nimport { MY_QUERY } from './queries'\n\nconst Index = () => {\n  const { loading, error, data } = useQuery(MY_QUERY)\n\n  const Data = ({ data }) => Object.keys(data).map((item) => (\n    <h1>{data[item]}</h1>\n  ))\n\n  return (\n    <>\n    {loading && <h1>Loading</h1>}\n    {error && <h1>error</h1>}\n    <Data data={data} />\n    </>\n  )\n}\n\nexport { Index }\n"]},"metadata":{},"sourceType":"module"}